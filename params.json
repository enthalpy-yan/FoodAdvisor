{"name":"FoodAdvisor","tagline":"FoodAdvisor is a simple food image search app that helps people to find where to eat with the given food image. It is also a Final Project for CS598 Visual Information Retrieval in Stevens Institute of Technology.","body":"##Artechiture\r\n\r\nIn this project, We use Flask framework to create a RESTful service that serves the data for our Front-end rich client application written by AngularJS. Since we chose JSON as our API format, we chose MongoDB as our JSON data store.\r\n\r\n##Technology Stacks\r\n\r\n###Back-end\r\n\r\nAPI Server: [Flask 0.10.1](http://flask.pocoo.org/)\r\n\r\nPersistence: [MongoDB 2.6](https://www.mongodb.org/)\r\n\r\nImage Search: [OpenCV-Python](http://docs.opencv.org/trunk/doc/py_tutorials/py_setup/py_table_of_contents_setup/py_table_of_contents_setup.html#py-table-of-content-setup), [Scipy Library](http://www.scipy.org/scipylib/index.html), [Numpy](http://www.numpy.org)\r\n\r\nData source: [Yelp](http://www.yelp.com)(food images), [Yelp API](http://api.yelp.com)(business info)\r\n\r\n###Front-end\r\n\r\nApp: [AngularJS](http://angularjs.org/), [Lo-Dash](http://lodash.com/), [Grunt](http://gruntjs.com/)\r\n\r\nStyle: [Bootstrap](http://getbootstrap.com/), [LESS](http://lesscss.org/), [FontAwesome](http://fortawesome.github.io/Font-Awesome/)\r\n\r\n##Development\r\n\r\n###Folder Structure\r\n    FoodAdvisor/\r\n        ├── app\r\n        │   ├── apphelpers        (Self-created global use functions)\r\n        │   ├── dbhelpers         (Self-created db-related functions)\r\n        │   ├── imagesearchapis   (Implements image search apis)\r\n        │   ├── restapis          (Implements RESTful apis )\r\n        │   ├── routes            (App routes)\r\n        │   └── static            (Front-end Angular App)\r\n        │   └── outputs           (folder for saving output files)\r\n        ├── flask                 (Flask virtual environment)\r\n        ├── node_modules          (Node dependencies)\r\n\r\n###Configuration\r\n####Environment\r\n\r\n  1. Install Python, MongoDB, OpenCV-Python.\r\n\r\n  2. Under the root directory, install python dependencies.\r\n\r\n    `$ ./installtolocal.sh`\r\n\r\n  3. Run the service(under the root directory), the server should be running without any issues.\r\n\r\n    `$ python run.py`\r\n  \r\n  Note: If there is an error about nltk, try to install it manually as follow:\r\n    \r\n    `$ python -m nltk.downloader stopwords`\r\n\r\n####Data\r\n\r\n  - Run preparedata.py script under app/dbhelpers/ to insert data into database(Make sure your local mongodb server is openning).\r\n\r\n    ```\r\n    $ cd app/dbhelpers\r\n    $ python preparedata.py\r\n    ```\r\n  \r\n  - Put image files into app/static/images/\r\n  \r\n  - Put tfidf file into app/outputs/\r\n\r\n####To Do List\r\n\r\n#####Image Searching Algorithm:\r\n\r\n- Collect images \r\n- Extract SIFT features from all the images and save them to SIFT pool\r\n- Cluster all SIFT features\r\n- Re-represent each image with bag of words\r\n- Calculate tf-idf for all images\r\n- Do inverted file indexing\r\n- Accept incoming image as query\r\n- Return highest rank images\r\n\r\n#####Back-end server:\r\n\r\n- Text suggestion search from the field including ‘description’, ‘category’, ‘name’. \r\n- Full text search from the field including ‘description’, ‘category’, ‘name’.\r\n- REST API for searching food image with the given image file.\r\n- REST API for Search food image with the given text: picture description, location or business name.\r\n\r\n\r\n#####Front-end:\r\n\r\n- A Flat, minimal looking interface.\r\n- Single page. \r\n- Text searching bar with autocomplete support.\r\n- Upload file through XHR.\r\n- Single upload file button with automatic submit.\r\n- Menu button for sorting result.\r\n- Load more button for pagination.\r\n- Progress bar for any long wait operation.\r\n- Animations for better user experience.\r\n\r\n###RESTful Service\r\n####Text autocomplete\r\nResource                   |      Method\r\n:------------------------- |-----------:|\r\n/api/foodtext/search &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| GET\r\n\r\nParameter                  |Description\r\n:------------------------- |-----------:|\r\nterm &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| keyword strings or prefixes\r\n\r\n####food image/text search\r\nResource                   |      Method\r\n:------------------------- |-----------:|\r\n/api/foodimages/search &nbsp;    | GET/POST\r\nResource:\r\n\r\nParameter                  |Description\r\n:------------------------- |-----------:|\r\nlongitude(optional) | client longitude information\r\nlatitude(optional) | client latitude information\r\noffset(optional) | Offset the list of returned image results by this amount\r\nquery(optional) | text query\r\nsortbylocation(optional) | filter result by location\r\nsortbyrating(optional) | filter result by rating\r\nsortbyname(optional) | filter result by alphabetic\r\n\r\n###DB document sample\r\n    {\r\n        \"description\": \"Amazing chicken tikka and aloo tacos\",\r\n        \"abspath\": \"/Users/hanyan/Desktop/Homework/CS598/FoodAdvisor/app/static/images/foods/23rd-street-cafe-los-angeles/Amazing chicken tikka and aloo tacos.jpg\",\r\n        \"business_id\": \"23rd-street-cafe-los-angeles\",\r\n        \"image_id\": 0,\r\n        \"relpath\": \"images/foods/23rd-street-cafe-los-angeles/Amazing chicken tikka and aloo tacos.jpg\",\r\n        \"business_info\": {\r\n            \"category\": [\r\n                [\r\n                    \"Indian\",\r\n                    \"indpak\"\r\n                ],\r\n                [\r\n                    \"Mexican\",\r\n                    \"mexican\"\r\n                ],\r\n                [\r\n                    \"American (New)\",\r\n                    \"newamerican\"\r\n                ]\r\n            ],\r\n            \"rating\": 4.0,\r\n            \"review_count\": 178,\r\n            \"name\": \"23rd Street Cafe\",\r\n            \"phone\": \"+1-213-749-1593\",\r\n            \"location\": {\r\n                \"display_name\": [\r\n                    \"936 W 23rd St\",\r\n                    \"University Park\",\r\n                    \"Los Angeles, CA 90007\"\r\n                ],\r\n    \t\t\t\"details\" : {\r\n    \t\t\t\t\"type\" : \"Point\",\r\n    \t\t\t\t\"coordinates\" : [\r\n    \t\t\t\t\t-118.2808464,\r\n    \t\t\t\t\t34.033785\r\n    \t\t\t\t]\r\n    \t\t\t}\r\n            }\r\n        }\r\n    }\r\n###Result sample\r\n    {\r\n        \"result\": [...],\r\n        \"status\": {\"text\": last text query, \"file\": the file name(server side) of the last image query}\r\n    }\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}